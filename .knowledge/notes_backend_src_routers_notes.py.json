{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing 'Note' entities within a personal notes manager application. It utilizes FastAPI for routing and request handling, and SQLAlchemy ORM for database interactions. The endpoints facilitate creating, listing, retrieving, updating, and deleting notes owned by the current user, supporting features like search, pagination, and sorting.", "external_files": ["src.api.deps", "src.db.models", "src.schemas.notes"], "external_methods": ["get_current_user", "get_db"], "published": ["list_notes", "create_note", "get_note", "update_note", "delete_note"], "classes": [], "methods": [{"name": "List[NoteOut] list_notes( q: Optional[str] = Query(default=None, description=\"Search text to match in title or content\"), skip: int = Query(default=0, ge=0, description=\"Items to skip\"), limit: int = Query(default=20, ge=1, le=100, description=\"Max number of items to return\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Lists notes owned by the current user with optional search, pagination, and sorting.", "scope": "", "scopeKind": ""}, {"name": "NoteOut create_note( payload: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Creates a new note for the current user.", "scope": "", "scopeKind": ""}, {"name": "NoteOut get_note( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Retrieves a specific note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "NoteOut update_note( note_id: int, payload: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Updates an existing note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "None delete_note( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )", "description": "Deletes a specific note by ID for the current user.", "scope": "", "scopeKind": ""}], "calls": ["db.query", "db.add", "db.commit", "db.refresh", "db.delete", "NoteOut.model_validate"], "search-terms": ["FastAPI notes endpoints", "CRUD notes API", "SQLAlchemy note model", "user-specific notes", "Notes API router"], "state": 2, "file_id": 13, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^def create_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( payload: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^def delete_note($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^def get_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^def list_notes($/", "language": "Python", "typeref": "typename:List[NoteOut]", "kind": "function", "signature": "( q: Optional[str] = Query(default=None, description=\"Search text to match in title or content\"), skip: int = Query(default=0, ge=0, description=\"Items to skip\"), limit: int = Query(default=20, ge=1, le=100, description=\"Max number of items to return\"), db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-162065-162075/notes_backend/src/routers/notes.py", "pattern": "/^def update_note($/", "language": "Python", "typeref": "typename:NoteOut", "kind": "function", "signature": "( note_id: int, payload: NoteUpdate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user), )"}], "hash": "b94de172350f48332399327db73bbf99", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/routers/notes.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"29": ""}]}